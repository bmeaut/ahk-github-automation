@if (IsLoading)
{
    <MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center justify-center" Style="min-height: 100vh;">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large"/>
    </MudContainer>
}
else
{
    @ChildContent
}

@code {

    [Parameter] public bool IsLoading { get; set; }

    [Parameter] public RenderFragment ChildContent { get; set; }

    [Parameter] public Func<Task>? LongTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await StartLoading();
    }

    public async Task StartLoading()
    {
        _ = Task.Run(async () =>
        {
            await Task.Delay(1); // Delay for 100 milliseconds
            if (LongTask != null)
            {
                IsLoading = true;
                StateHasChanged();
                await LongTask();
                IsLoading = false;
                StateHasChanged();
            }
        });
    }

}
