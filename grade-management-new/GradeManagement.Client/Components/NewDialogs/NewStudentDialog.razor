<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h4">New Student</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="form" Model="@value" @bind-IsValid="@success" @bind-Errors="@errors">
            <MudTextField T="string" Label="Name" For="@(() => value.Name)" @bind-Value="value.Name" Required="true"></MudTextField>
            <MudTextField T="string" Label="Neptun Code" For="@(() => value.NeptunCode)" @bind-Value="value.NeptunCode" Required="true"></MudTextField>
            <MudTextField T="string" Label="Github Id" For="@(() => value.GithubId)" @bind-Value="value.GithubId" Required="true"></MudTextField>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="@OnSubmitClicked">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private MudForm form;
    private bool success;
    private string[] errors;

    private void Submit() => MudDialog.Close(DialogResult.Ok(value));
    private void Cancel() => MudDialog.Cancel();

    private async void OnSubmitClicked()
    {
        await form.Validate();
        if (form.IsValid)
        {
            Submit();
        }
    }

    public StudentRequest value = new()
    {
        GroupIds = []
    };

}
