@page "/languages"
@using GradeManagement.Client.Components.NewDialogs
@layout AuthenticatedLayout

@inject IDialogService DialogService
@inject CrudSnackbarService SnackbarService
@inject LanguageClient LanguageClient

<PageTitle>Languages</PageTitle>

<LoadingComponent @ref="loadingRef" LongTask="@Loading">
    <MudText Typo="Typo.h4" Class="mt-4">Languages</MudText>
    <MudDivider Class="mb-4"/>
    <MudDataGrid T="Language" Items="_languages" EditMode="DataGridEditMode.Form" ReadOnly="false" CommittedItemChanges="@CommittedItemChanges">
        <Columns>
            <PropertyColumn Property="x => x.Id" Title="Id" Editable="false"/>
            <PropertyColumn Property="x => x.Name" Title="Name"/>
            <DataGridActions TItem="Language" OnEditItem="@StartEditing" OnDeleteItem="@DeleteItem" AddEdit="false"/>
        </Columns>
    </MudDataGrid>
    <MudFab Style="position:fixed; bottom:50px;right:50px" Color="@Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="@OpenDialog"/>
</LoadingComponent>

@code {
    private ICollection<Language> _languages = new List<Language>();
    private LoadingComponent loadingRef;

    private async Task OpenDialog()
    {
        var dialog = await DialogService.ShowAsync<NewLanguageDialog>("Hello");
        var result = await dialog.Result;
        if (!result.Canceled && result.Data != null)
        {
            await LanguageClient.CreateAsync(result.Data as Language);
            SnackbarService.ShowAddSuccess();
            await loadingRef.StartLoading();
        }
    }

    private async Task StartEditing(CellContext<Language?> context)
    {
        await context.Actions.StartEditingItemAsync();
        StateHasChanged();
    }

    private async Task Loading()
    {
        _languages = await LanguageClient.GetAllAsync();
    }

    private async Task CommittedItemChanges(Language items)
    {
        //await LanguageClient.UpdateAsync(items);
        SnackbarService.ShowError("Edit not implemented");
    }

    private async Task DeleteItem(Language item)
    {
        await LanguageClient.DeleteAsync(item.Id);
        SnackbarService.ShowDeleteSuccess();
        await loadingRef.StartLoading();
    }

}
